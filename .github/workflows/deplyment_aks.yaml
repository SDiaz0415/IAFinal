name: Deploy AKS and Services Manually

on:
  workflow_dispatch:  # Se ejecuta manualmente

jobs:
  create-aks:
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Check if AKS Exists
        id: check-aks
        run: |
          if az aks show --name mi-cluster-aks --resource-group grupo-k8s &>/dev/null; then
            echo "AKS_EXISTS=true" >> $GITHUB_ENV
          else
            echo "AKS_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create AKS Cluster (if not exists)
        if: env.AKS_EXISTS == 'false'
        run: |
          az aks create --resource-group grupo-k8s --name mi-cluster-aks \
            --node-count 1 --node-vm-size Standard_D4s_v3 --enable-addons monitoring \
            --generate-ssh-keys

      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group grupo-k8s --name mi-cluster-aks

      - name: Deploy Ollama
        run: kubectl apply -f k8s/ollama-deployment.yaml

      - name: Wait for Ollama to be ready
        run: |
          echo "Waiting for Ollama pod to be ready..."
          kubectl wait --for=condition=available --timeout=300s deployment/ollama

      - name: Pull Mistral model in Ollama
        run: |
          POD_NAME=$(kubectl get pods -l app=ollama -o jsonpath="{.items[0].metadata.name}")
          kubectl exec $POD_NAME -- ollama pull mistral:latest

      - name: Delay to Ensure Ollama is Ready
        run: sleep 60

      - name: Deploy Backend
        run: kubectl apply -f k8s/backend-deployment.yaml

      - name: Deploy Frontend
        run: kubectl apply -f k8s/frontend-deployment.yaml