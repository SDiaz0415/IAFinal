name: Deploy AKS

on:
  workflow_dispatch:

permissions:
  id-token: write  # NECESARIO para el login en Azure

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Check if AKS Exists
        id: check-aks
        run: |
          if az aks show --resource-group grupo-k8s --name mi-cluster-aks &> /dev/null; then
            echo "AKS cluster already exists. Skipping creation."
            echo "EXISTS=true" >> $GITHUB_ENV
          else
            echo "AKS cluster does not exist. Proceeding with creation."
            echo "EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create AKS Cluster
        if: env.EXISTS == 'false'
        run: |
          az aks create --resource-group grupo-k8s --name mi-cluster-aks \
            --node-count 1 --node-vm-size Standard_D4s_v3 \
            --enable-addons monitoring --generate-ssh-keys

      - name: Get AKS Credentials
        run: |
          az aks get-credentials --resource-group grupo-k8s --name mi-cluster-aks

      - name: Deploy Ollama
        run: |
          kubectl apply -f k8s/ollama-deployment.yaml

      - name: Wait for Ollama Pod to be Ready
        run: |
          echo "Waiting for Ollama container to be ready..."
          kubectl wait --for=condition=ready pod -l app=ollama --timeout=300s

      - name: Pull Ollama Model
        run: |
          kubectl exec -it $(kubectl get pod -l app=ollama -o jsonpath="{.items[0].metadata.name}") -- ollama pull mistral:latest

      - name: Deploy Backend & Frontend
        run: |
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/frontend-deployment.yaml
