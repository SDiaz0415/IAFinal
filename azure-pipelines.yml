trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  dockerHubServiceConnection: 'DockerHubConnection'
  dockerHubUsername: 'tu_usuario'
  backendImageName: 'tu_usuario/backend'
  frontendImageName: 'tu_usuario/frontend'
  ollamaImageName: 'ollama/ollama'  # Imagen oficial de Ollama
  aksClusterName: 'mi-cluster-aks'
  resourceGroup: 'mi-resource-group'

stages:
- stage: BuildAndPush
  displayName: "Build and Push to Docker Hub"
  jobs:
  - job: Build
    displayName: "Build Docker Images"
    steps:
    - task: Docker@2
      displayName: "Login to Docker Hub"
      inputs:
        command: login
        containerRegistry: $(dockerHubServiceConnection)

    - task: Docker@2
      displayName: "Build Backend Image"
      inputs:
        command: build
        Dockerfile: backend/Dockerfile
        repository: $(backendImageName)
        tags: latest

    - task: Docker@2
      displayName: "Build Frontend Image"
      inputs:
        command: build
        Dockerfile: frontend/Dockerfile
        repository: $(frontendImageName)
        tags: latest

    - task: Docker@2
      displayName: "Push Backend Image to Docker Hub"
      inputs:
        command: push
        repository: $(backendImageName)
        tags: latest

    - task: Docker@2
      displayName: "Push Frontend Image to Docker Hub"
      inputs:
        command: push
        repository: $(frontendImageName)
        tags: latest

- stage: DeployToAKS
  displayName: "Deploy to AKS"
  jobs:
  - job: Deploy
    displayName: "Deploy to AKS"
    steps:
    - task: Kubernetes@1
      displayName: "Login to AKS"
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'AzureServiceConnection'
        azureResourceGroup: $(resourceGroup)
        kubernetesCluster: $(aksClusterName)
        command: 'apply'
        arguments: '-f k8s/deployment.yaml'
